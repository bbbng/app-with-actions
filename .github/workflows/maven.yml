# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  workflow_dispatch
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - run: touch ./src/main/resources/application.properties
    - run: echo "${{ secrets.APPLICATION }}" >> ./src/main/resources/application.properties
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml
      
    #- name: Jar file move
    #  run: mv ./target/*.jar ./app.jar

    #- name: check jar
    #  run: ls .

    #- uses: actions/upload-artifact@v4
    #  with:
    #    name: app.jar
    #    path: ./target/*.jar
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: docker Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: hgreen726/app-with-actions:latest

   # - name: scp 파일 복사
   #   uses: appleboy/scp-action@v0.1.7
   #   with:
   #     host: ${{ secrets.EC2_HOST }}
   #     username: ${{ secrets.EC2_USERNAME }}
   #     key: ${{ secrets.EC2_PRIVATE_KEY }}
   #     source: ./app.jar
   #     target: /home/ubuntu/app
  
  cd:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: EC2 연결 후 실행
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script_stop: true
        script: |
          cd /home/ubuntu/app
          docker-compose down || true
          docker pull hgreen726/app-with-actions:latest
          docker-compose up       


   #       docker stop app-with-actions || true
   #       docker rm app-with-actions || true
   #       docker run -d -p 8080:8080 --name app-with-actions hgreen726/app-with-actions:latest
   #       # 8080 포트를 사용하는 프로세스를 kill하는 명령 
   #       # "|| true"가 있어서 kill할 프로세스가 없더라도 스크립트 실행이 중단되지 않는다.
   #       sudo fuser -k -TERM -n tcp 8080 || true
   #       rm -rf /home/ubuntu/app/deploy
   #       mkdir /home/ubuntu/app/deploy
   #       mv /home/ubuntu/app/app.jar /home/ubuntu/app/deploy/app.jar
   #       cd /home/ubuntu/app/deploy
   #       nohup java -jar app.jar > ./output.log 2>&1 &
          # rm -rf /home/ubuntu/app
          

        

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
