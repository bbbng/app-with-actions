name: Build and Push Docker Image To AWS ECR
on:
  workflow_dispatch

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: bbbng/app-with-actions
  ECS_SERVICE: first-ecs-service-01
  ECS_CLUSTER: FirstECSCluster01
  CONTAINER_NAME: first-ecs-container-01

jobs:
  build-push-image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - run: mkdir ./src/main/resources
    - run: touch ./src/main/resources/application.properties
    - run: echo "${{ secrets.APPLICATION }}" >> ./src/main/resources/application.properties

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Build, tag, and push docker image to Amazon ECR Public
      id: build-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #REGISTRY_ALIAS: ${{ secrets.ECR_ID }}
        REPOSITORY: ${{ env.ECR_REPOSITORY }}
        IMAGE_TAG: latest
      run: |
        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: retrieve ECS task definition JSON
      id: retrieve-task-def
      env:
        IMAGE_TAG: latest
        TASK_DEF: firsttask-def01
      run: |
        aws ecs describe-task-definition --task-definition $TASK_DEF --query taskDefinition > task-definition.json
        echo "task-def-file=task-definition.json" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ steps.retrieve-task-def.outputs.task-def-file }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
