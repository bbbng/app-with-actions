# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml
      
    - name: Jar file move
      run: mv ./target/*.jar ./app.jar

    - name: check jar
      run: ls .

    #- uses: actions/upload-artifact@v4
    #  with:
    #    name: app.jar
    #    path: ./target/*.jar
  copy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: scp 파일 복사
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        source: ./app.jar
        target: /home/ubuntu/app

  exec:
    runs-on: ubuntu-latest
    needs: copy
    steps:
    - name: EC2 연결 후 실행
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_PRIVATE_KEY }}
        script_stop: true
        script: |
          rm -rf /home/ubuntu/app/deploy
          mkdir /home/ubuntu/app/deploy
          mv /home/ubuntu/app/app.jar /home/ubuntu/app/deploy/app.jar
          cd /home/ubuntu/app/deploy
          # 8080 포트를 사용하는 프로세스를 kill하는 명령
          sudo fuser -k -n tcp 8080 || true
          nohup java -jar app.jar > ./output.log 2>&1 &
          # rm -rf /home/ubuntu/app
          

        

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
